*usr_06.txt*	For Vim version 8.0.  最近更新: 2010年5月

		     VIM 使用者手冊 - by Bram Moolenaar
		     譯者: Nek_in http://vimcdoc.sf.net

			  使用語法高亮


黑白的文字讓人厭倦了，增加一些色彩能為你的檔案帶來生氣。這不但看起來漂亮，
還能夠提高你的工作效率。本章介紹如何使用不同顏色顯示不同文字並把它打印出來。

|06.1|	功能啟用
|06.2|	顏色顯示不出來或者顯示出錯誤的顏色怎麼辦？
|06.3|	使用不同的顏色
|06.4|	是否使用色彩
|06.5|	帶顏色列印
|06.6|	深入閱讀

     下一章: |usr_07.txt|  編輯多個檔案
     前一章: |usr_05.txt|  選項設定
       目錄: |usr_toc.txt|

==============================================================================
*06.1*	功能啟用

一切從一個簡單的命令開始: >

	:syntax enable

大多數情況下，這會讓你的檔案帶上顏色。Vim 會自動檢測檔案的型別，並呼叫合適的語
法高亮。一下子註釋變成藍色，關鍵字變成褐色，而字串變成紅色了。這使你可以很容
易瀏覽整個文件。很快你就會發現，黑白的文字真的會降低你的效率！

如果你希望總能看到語法高亮，把 "syntax enable" 命令加入到 |vimrc| 檔案中。

如果你想語法高亮只在支援色彩的終端中生效，你可以在 |vimrc| 檔案中這樣寫: >

	if &t_Co > 1
	  syntax enable
	endif

如果你只想在 GUI 版本中有效，可以把 ":syntax enable" 放入你的 |gvimrc| 檔案。

==============================================================================
*06.2*	顏色顯示不出來或者顯示出錯誤的顏色怎麼辦？

有很多因素會讓你看不到顏色:

- 你的終端不支援彩色。
	這種情況下，Vim 會用粗體，斜體和下劃線區分不同文字，但這不好看。你可能
	會希望找一個支援彩色的終端。對於 Unix，我推薦 XFree86 專案的 xterm:
	|xfree-xterm|。

- 你的終端其實支援顏色，可是 Vim 不知道。
	確保你的 $TERM 設定正確。例如，當你使用一個支援彩色的 xterm 終端: >

		setenv TERM xterm-color
<
	或者 (基於你用的控制檯終端) >

		TERM=xterm-color; export TERM
<
	終端名必須與你使用的終端一致。如果這還是不行，參考一下 |xterm-color|，
	那裡介紹了一些使 Vim 顯示彩色的方法 (不僅是 xterm)。

- 檔案型別無法識別。
	Vim 不可能識別所有檔案，而且有時很難說一個檔案是什麼型別的。試一下這個
	命令: >

		:set filetype
<
	如果結果是 "filetype="，那麼問題就是出在檔案型別上了。你可以手工指定文
	件型別: >

		:set filetype=fortran
<
	要知道哪些型別是有效的，檢視一下 $VIMRUNTIME/syntax 目錄。對於 GUI 版
	本，你還可以使用 Syntax 選單。設定檔案型別也可以通過 |modeline|，這種
	方式使得該檔案每次被編輯時都被高亮。例如，下面這行可用於 Makefile (把
	它放在接近檔案首和檔案末的地方) >

		# vim: syntax=make
<
	你可能知道怎麼檢測自己的檔案型別，通常的方法是檢查檔案的副檔名 (就是點
	後面的內容)。|new-filetype| 說明如何告知 Vim 進行那種檔案型別的檢查。

- 你的檔案型別沒有語法高亮定義。
	你可以找一個相似的檔案型別並人工設定為那種型別。如果覺得不好，你可以自
	己寫一個，參見 |mysyntaxfile|。


或者顏色是錯的:

- 彩色的文字難以辨認。
	Vim 自動猜測你使用的背景色。如果是黑的 (或者其它深色的色彩)，它會用淺
	色作為前景色。如果是白的 (或者其它淺色)，它會使用深色作為前景色。如果
	Vim 猜錯了，文字就很難認了。要解決這個問題，設定一下 'background' 選
	項。對於深色: >

		:set background=dark
<
	而對於淺色: >

		:set background=light
<
       這兩個命令必須在 ":syntax enable" 命令前呼叫，否則不起作用。如果要在這
       之後設定背景，可以再呼叫一下 ":syntax reset" 使得 Vim 重新進行預設顏色
       的設定。

- 在自下往上滾屏的過程中顏色顯示不對。
	Vim 在分析文字的時候不對整個檔案進行處理，它只分析你要顯示的部分。這
	樣能省不少時間，但也會因此帶來錯誤。一個簡單的修正方法是敲 CTRL-L。
	或者往回滾動一下再回來。要徹底解決這個問題，請參見 |:syn-sync|。有些
	語法定義檔案有辦法自己找到前面的內容，這可以參見相應的語法定義檔案。
	例如，|tex.vim| 中可以查到 Tex 語法定義。

==============================================================================
*06.3*	使用不同顏色			       *:syn-default-override*

如果你不喜歡預設的顏色方案，你可以選另一個色彩方案。在 GUI 版本中可以使用
Edit/Color 選單。你也可以使用這個命令: >

	:colorscheme evening

"evening" 是色彩方案的名稱。還有幾種備選方案可以試一下。在 $VIMRUNTIME/colors
中可以找到這些方案。

等你確定了一種喜歡的色彩方案，可以把 ":colorscheme" 命令加到你的 |vimrc| 檔案
中。

你可以自己編寫色彩方案，方法如下:

1. 選擇一種接近你理想的色彩方案。把這個檔案拷貝到你自己的 Vim 目錄中。在
Unix 上，可以這樣: >

	!mkdir ~/.vim/colors
       !cp $VIMRUNTIME/colors/morning.vim ~/.vim/colors/mine.vim
<
   在 Vim 中完成的好處是可以利用 $VIMRUNTIME 變數。

2. 編輯這個色彩方案，常用的有下面的這些條目:

	term		黑白終端的屬性
	cterm		彩色終端的屬性
	ctermfg		彩色終端的前景色
	ctermbg		彩色終端的背景色
	gui		GUI 版本屬性
	guifg		GUI 版本的前景色
	guibg		GUI 版本的背景色

   例如，要用綠色顯示註釋: >

	:highlight Comment ctermfg=green guifg=green
<
   屬性是 "bold" (粗體) 和 "underline" (下劃線) 可以用於 "cterm" 和 "gui"。如
   果你兩個都想用，可以用 "bond,underline"。詳細資訊請參考 |:highlight| 命令。

3. 告訴 Vim 總使用你這個色彩方案。把如下語句加入你的 |vimrc| 中: >

	colorscheme mine

如果你要測試一下常用的色彩組合，用如下命令:   >

	:runtime syntax/colortest.vim

這樣你會看到不同的顏色組合。你可以很容易的看到哪一種可讀性好而且漂亮。

==============================================================================
*06.4*	是否使用色彩

使用色彩顯示文字會影響效率。如果你覺得顯示得很慢，可以臨時關掉這個功能: >

	:syntax clear

當你開始編輯另一個檔案 (或者同一個檔案)，色彩會重新生效。

							*:syn-off*
如果你要完全關閉這個功能: >

	:syntax off

這個命令會停止對所有緩衝區的所有語法高亮。

							*:syn-manual*
如果你想只對特定的檔案採用語法高亮，可以使用這個命令: >

	:syntax manual

這個命令啟用語法高亮功能，但不會在你開始編輯一個緩衝區時自動生效 (譯者注: Vim
中，每個被開啟的檔案對應一個緩衝區，後面的章節中你會接觸到這方面的內容)。要在
當前緩衝區中使用高亮，需要設定 'syntax' 選項: >

	:set syntax=ON
<
==============================================================================
*06.5*	帶顏色列印					 *syntax-printing*

在 MS-Windows 版本上，你可以用如下命令列印當前檔案: >

	:hardcopy

這個命令會啟動一個常見的列印對話方塊，你可以通過它選擇印表機並作一些必要的設定。
如果你使用的是彩色印表機，那麼打印出來的色彩將與你在 Vim 中看到的一樣。但如果
你使用的是深色的背景，它的顏色會被適當調整，以便在白色地列印紙上看起來比較舒
服。

下面幾個選項可以改變 Vim 的列印行為:
	'printdevice'
	'printheader'
	'printfont'
	'printoptions'

要僅列印一定範圍內的行，可以用可視模式選擇需要列印的行再執行列印命令，例如: >

	v100j:hardcopy

"v" 啟動可視模式，"100j" 向下選中 100 行，然後執行 ":hardcopy" 列印這些行。當
然，你可以用其它命令選中這 100 行。

如果你有一臺 PostScript 印表機，上面的方法也適合 Unix 系統。否則，你必須做一些
額外的處理: 你需要先把檔案轉換成 HTML 型別，然後用瀏覽器列印。

如下命令把當前檔案轉換成 HTML 格式: >

	:TOhtml

如果不行: >

	:source $VIMRUNTIME/syntax/2html.vim

你發現它會嘎吱嘎吱執行一陣子，(如果檔案很大，這可能要花點時間)。之後，Vim 會打
開一個新的視窗並顯示 HTML 程式碼。現在把這個檔案存下來 (存在哪都不要緊，反正最後
你要刪掉它的): >

	:write main.c.html

用你喜歡的瀏覽器開啟這個檔案，並通過它列印這個檔案。如果一切順利，這個輸出應該
與 Vim 中顯示的一樣。要了解更詳細的資訊，請參見 |2html.vim|。處理完後別忘了刪
掉那個 HTML 檔案。

除了列印，你還可以把這個 HTML 檔案，放到 WEB 伺服器上，讓其他人可以通過彩色文
本閱讀。

==============================================================================
*06.6*	深入閱讀

|usr_44.txt|	自定義語法高亮
|syntax|	關於本話題的全部細節

==============================================================================

下一章: |usr_07.txt|  編輯多個檔案

版權: 參見 |manual-copyright|  vim:tw=78:ts=8:ft=help:norl:
