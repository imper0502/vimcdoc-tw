*usr_09.txt*	For Vim version 8.0.  最近更新: 2017年8月

		     VIM 使用者手冊 - by Bram Moolenaar
		     譯者: Nek_in http://vimcdoc.sf.net

			  使用 GUI 版本


Vim 能在一般的終端中很好地工作。GVim 則可以完成相同，甚至更多的功能。Gvim 能提
供選單，工具條，滾動條和其它東西。本章介紹這些額外的功能。

|09.1|	GUI 版本的元件
|09.2|	使用滑鼠
|09.3|	剪貼簿
|09.4|	選擇模式

     下一章: |usr_10.txt|  做大修改
     前一章: |usr_08.txt|  分割視窗
       目錄: |usr_toc.txt|

==============================================================================
*09.1*	GUI 版本的元件

你可以在你的桌面上放一個啟動 gVim 的圖示。此外，下面的任一個命令也可以啟動
gVim:
>
	gvim file.txt
	vim -g file.txt

如果這樣不行，可能是因為你的 Vim 不支援 GUI 版本特性。你需要先安裝一個合適的版
本。
    執行命令後，Vim 會開啟一個視窗，並顯示檔案 "file.txt"。視窗的樣子取決於
Vim 的版本。一般是下面這個樣子 (儘可能地用 ASCII 碼展示):

	+----------------------------------------------------+
	| file.txt + (~/dir) - VIM			   X |	<- 視窗標題
	+----------------------------------------------------+
	| File	Edit  Tools  Syntax  Buffers  Window  Help   |	<- 選單欄
	+----------------------------------------------------+
	| aaa  bbb  ccc  ddd  eee  fff	ggg  hhh  iii  jjj   |	<- 工具欄
	| aaa  bbb  ccc  ddd  eee  fff	ggg  hhh  iii  jjj   |
	+----------------------------------------------------+
	| file text					 | ^ |
	| ~						 | # |
	| ~						 | # |	<- 滾動條
	| ~						 | # |
	| ~						 | # |
	| ~						 | # |
	|						 | V |
	+----------------------------------------------------+

最大的一片空間是檔案的內容。這部分與終端上看到的是一樣的，只是顏色和字型可能有
一點差別。


窗 口 標 題

視窗最頂上是視窗標題。這由你的視窗系統繪製。Vim 會在這個標題上顯示當前檔案的相
關資訊。首先顯示的是檔名，然後是一個特殊字元，最後是用括號括住的目錄名。下面
的是這些特殊字元的含義:

	-	檔案不能被修改 (例如幫助檔案)
	+	已經被修改過
	=	檔案只讀
	=+	檔案只讀，但仍被修改過

如果沒有顯示任何特殊字元，表示這是一個普通的，沒有改過的檔案。


菜 單 欄

你知道選單是怎麼工作的，是吧？ Vim 有些通用的選單，外加一些特別的。逐個看看，
猜測一下這些選單都可以用來幹什麼。另一個相關的子選單是 Edit/Global，你可以在那
裡找到這些選單項:

	Toggle Toolbar		使工具條可見/不可見
	Toggle Bottom Scrollbar	使底部的滾動條可見/不可見
	Toggle Left Scrollbar	使左邊的滾動條可見/不可見
	Toggle Right Scrollbar	使右邊的滾動條可見/不可見

在大多數系統裡，你可以把選單 "撕下來"。選中選單最上面的選單欄，就是那個看起來
象條虛線的。這樣你可以得到一個分離的選單，裡面包括了所有選單項。它會一直掛在那
裡，直到你關閉它。


工 具 欄

這裡包括使用最頻繁的操作的圖示。希望這些圖示功能顯而易見。另外，每個圖示都支援
"工具提示" (把滑鼠移上去停一會兒就能看見這個提示)

"Edit/Global Settings/Toggle Toolbar" 選單項可以關閉工具條。如果你從來都不使用
工具條，可以在 vimrc 檔案中加上:
>
	:set guioptions-=T

這個命令從 'guioptions' 中刪除 "T" 標記。其它 GUI 部件也可以通過這種方法啟用或
關閉。參見這個選項的相關幫助。


滾 動 條

預設情況下，右邊會有一個滾動條，它的作用是很明顯的。當你分割視窗的時候，每個窗
口都會有自己的滾動條。
    你可以通過 "Edit/Global Settings/Toggle Bottom Scrollbar" 來啟動一個水平滾
動條。這在比較模式或沒有設定 'wrap' 時非常有用 (後面有更多描述)。

在使用垂直分割的時候，只有右邊的視窗有滾動條，但當你把游標移到左邊的視窗上，右
邊的滾動條會對這個視窗起作用，這需要一些時間去適應。
    當你使用垂直分割的時候，可以考慮把滾動條放在左邊。這可以通過選單啟用，或者
使用 'guioptions' 選項:
>
	:set guioptions+=l

這是在 'guioptions' 中增加 'l' 標誌位。

==============================================================================
*09.2*	使用滑鼠

標準是好東西。在微軟的 Windows 作業系統中，你可以用標準模式選中文字。X Windows
也有一套使用滑鼠的標準。非常不幸，這兩套標準是不同的。
    幸運的是，你可以定製 Vim。你可以讓你的滑鼠行為象 X Windows 或者象微軟
Windows 的滑鼠。下面的命令使滑鼠用起來象 X Windows:
>
	:behave xterm

而如下命令使滑鼠用起來象微軟 Windows:
>
	:behave mswin

在 UNIX 作業系統中，預設的滑鼠行為是 xterm。而預設的微軟 Windows 系統的滑鼠行
為是在安裝的時候選定的。要了解這兩種行為的詳細資訊，請參考 |:behave|。下面是一
些摘要:

XTERM 鼠 標 行 為

左鍵單擊		定位游標
左鍵拖動		在可視模式下選中文字
中鍵單擊		從剪貼簿中貼上文字
右鍵單擊		把選中的文字擴充套件到當前的游標位置


微軟 Windows 滑鼠行為

左鍵單擊		定位游標
左鍵拖動		在選擇模式下選中文字 (參見 |09.4|)
按住 Shift，左鍵單擊    把選中的文字擴充套件到當前的游標位置
中鍵單擊		從剪貼簿中貼上文字
右鍵單擊		顯示一個彈出式選單


可以進一步定製滑鼠。請參見下面的選項:

	'mouse'		滑鼠的使用模式
	'mousemodel'	滑鼠單擊的效果
	'mousetime'	雙擊的間隔允許時間
	'mousehide'	輸入的時候隱藏滑鼠
	'selectmode'	滑鼠啟動可視模式還是選擇模式

==============================================================================
*09.3*	剪貼簿

|04.7| 節已經介紹過剪貼簿的基本使用了。這裡有一個重要的地方要解釋一下: 對於
X-windows 系統，有兩個地方可以在程式間交換文字，而 MS-Windows 不是這樣的。

在 X-Windows，有一個 "當前選擇區" 的概念。它表示正被選中的文字。在 Vim 中，這
表示可視區 (假定你正使用預設的設定)。不需要任何其它操作，你就可以把這些文字貼
到別的程式中。
    例如，你用滑鼠在本文中選中一些文字。Vim 會自動切換到可視模式，並高亮這些文
本。現在啟動另一個 gvim，(由於沒有指定檔名，它會顯示出一個空視窗)。點選滑鼠
中鍵。被選中的文字就會被貼進來。
    "當前選擇區" 會一直保持有效直到你選中其它文字。在另一個視窗中貼上文字後，
在這個視窗中選中一些文字，你會發現上一個視窗中選中的文字顯示的方法跟原來有些區
別了，這表示這些文字已經不是 "當前選擇區" 了。

你不一定要用滑鼠來選中文字，用鍵盤的 "可視" 命令也能達到相同的效果。

"真" 剪 貼 板

對於另一個交換文字的地方，我們稱之為 "真" 剪貼簿以避免與上面的 "當前選擇區" 混
淆。通常 "當前選擇區" 和 "真" 剪貼簿都稱為剪貼簿，你需要習慣這些名稱。
    要把文字拷貝到真剪貼簿，在一個 gVim 中選中一些文字，然後執行選單命令
Edit/Copy。這樣文字就被拷貝到真剪貼簿了。剪貼簿的內容是不可見的，除非你使用特
別的顯示程式，例如 KDE 的 klipper 程式。
    現在，切換到另一個 gVim，把游標停在某個位置，然後執行選單命令 Edit/Paste
選單。你會看到真剪貼簿中的內容被插入到當前的游標位置。


使 用 兩 種 剪 貼 板

這種同時使用 "當前選擇區" 和 "真剪貼簿" 的操作方式聽起來很亂。但這是很有用的。
我們通過一個例子來說明。用 gvim 開啟一個檔案並執行如下命令:

- 在可視模式下選中兩個詞
- 使用 Edit/Copy 選單把這些詞拷到剪貼簿
- 再用可視模式選中另一個詞
- 執行 Edit/Paste 選單命令。這樣第二次選中的詞會被前面剪貼簿中的詞代替。
- 把滑鼠移到另一個地方按中鍵，你會發現你剛被覆蓋的單詞被貼上到新的位置。

如果你小心使用 "當前選擇區" 和 "真剪貼簿" 兩個工具，你可以完成很多很有用的工
作。


使 用 鍵 盤

如果你不喜歡使用滑鼠，你可以通過兩個暫存器來使用 "當前選擇區" 和 "真剪貼簿" 兩
個剪貼簿。"* 暫存器用於表示當前選擇區。
   要使文字變成 "當前選擇區"，只要使用可視模式即可。例如，要選中一整行只要輸入
"V"。
    要拷貝當前選擇區的內容:
>
	"*P

注意這裡 "P" 是大寫，表示把文字拷貝到游標的前面。

"+ 暫存器用於真剪貼簿。例如，要把當前游標位置到行末的文字拷到真剪貼簿:
>
	"+y$

記得吧，"y" 是 yank，這是 Vim 的拷貝命令。
    要把真剪貼簿的內容拷到游標前面:
>
	"+P

這與 "當前選擇區" 一樣，只是用 (+) 暫存器取代了 (*) 暫存器。

==============================================================================
*09.4*	選擇模式

現在介紹一些在 MS-Windows 中比在 X-Windows 中更常被使用的東西 (但在兩個系統上
都可用)。你已經瞭解可視模式了。選擇模式與可視模式相似，也是用來選中文字的。但
有一個顯著區別: 當輸入文字的時候，在選擇模式下，被選中的文字將被替換成新輸入的
文字。

要啟用選擇模式，先要啟用它 (對於 MS-Windows，可能已經激活了，不過多做一次也沒
什麼):
>
	:set selectmode+=mouse

現在用滑鼠選中一些文字，這些文字會好像可視模式一樣被高亮。現在敲入一個字母。被
選中的文字被刪除，替換成新的字母。現在已經是插入模式了，你可以繼續輸入。

由於輸入普通文字導致選中的文字被刪除，這時你不能使用 "hjkl"，"w" 等移動命令。
這時可以使用 "Shift" 加功能鍵。<S-Left> (shift 鍵加左箭頭) 使游標左移。選中的
文字象可視模式一樣被擴充套件或者減少。其它箭頭起的作用你也可以猜到了，<S-End> 和
<S-Home> 也一樣。

你可以通過 'selectmode' 選項修改選擇模式的工作方式。

==============================================================================

下一章: |usr_10.txt|  作大修改

版權: 參見 |manual-copyright|  vim:tw=78:ts=8:ft=help:norl:
