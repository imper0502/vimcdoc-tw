*debug.txt*     For Vim version 8.0.  最近更新: 2013年1月


		  VIM 參考手冊	  by Bram Moolenaar
				譯者: Willis
				http://vimcdoc.sf.net


除錯 Vim						*debug-vim*

本文件是為了除錯 Vim 自身而準備的，如果 Vim 不能正確工作，請看這裡。
如果要除錯 Vim 指令碼和函式等，見 |debug-scripts|。

1. 用 gcc 和 gdb 定位崩潰			|debug-gcc|
2. 定位記憶體洩漏                                 |debug-leaks|
3. Windows 漏洞報告				|debug-win32|

==============================================================================

1. 用 gcc 和 gdb 定位崩潰				*debug-gcc* *gdb*

如果 Vim 崩潰於某測試檔案而使用的編譯器是 gcc 的話，下面給出具體步驟，你可以用
它來發現 Vim 崩潰的準確位置。MingW 工具同樣適用。

1. 用 "-g" 選項編譯 Vim (src/Makefile 有一行用於此目的，只要去掉註釋即可)。同
   時保證不使用 "strip" (不要安裝，或者用 "STRIP = /bin/true")。

2. 執行命令 (把 "11" 換成實際失敗的那個測試): >
	cd testdir
	gdb ../vim
	run -u unix.vim -U NONE -s dotest.in test11.in

3. 檢查 Vim 在哪裡崩潰，gdb 會給出這方面的訊息。

4. 此 gdb 命令可以得到堆疊記錄: >
	where
<  此命令可以檢視不同的堆疊記錄位置: >
	frame 3
<  把 "3" 換成堆疊記錄其中一個位置。

==============================================================================

2. 定位記憶體洩漏					*debug-leaks* *valgrind*

如果你懷疑 Vim 洩漏記憶體並且使用的是 Linux，valgrind 是定位記憶體洩漏很有用的工
具。

首先，編譯 Vim 時定義 EXITFREE。在 MAKEFILE 裡查詢之並去掉註釋。

用以下的命令啟動 Vim:
>
	valgrind --log-file=valgrind.log --leak-check=full ./vim

備註: Vim 的執行會變慢許多。如果 .vimrc 很大或者有多個外掛，啟動時請耐心，也可
使用 "-u NONE" 引數執行來跳過這些。

常有一些庫函式發生洩漏，例如 getpwuid() 和 XtVaAppCreateShell()。沒法避免這種
情況，但洩漏的位元組數應該很少，不超過一千位元組。

==============================================================================

3. Windows 漏洞報告					*debug-win32*

如果 Vim 的 Windows 版本崩潰且崩潰可以重現，通過採取若干步驟，你可以提供有用的
漏洞報告。


3.1 通用 ~

首先，你需要可執行檔案的偵錯程式符號檔案 (PDB): gvim.pdb 對應 gvim.exe，vim.pdb
對應 vim.exe。在獲得可執行檔案的相同位置應該可以下載 PDB。確信使用和 EXE 匹配
的 PDB 檔案 (日期相同)。

如果你自己用 Microsoft Visual C++ 編譯器編譯可執行檔案，PDB 應該和 EXE 在同一
個生成目錄。

另一個方案是，如果有原始碼，在 Visual Studio 裡你可以匯入 Make_ivc.mak 以構造
一個工作區 (workspace)。然後選擇除錯配置 (debug configuration)，構造並進行各種
型別的除錯 (設定斷點，觀察 (watch) 變數等)。

如果你有 Visual Studio，用它來代替 VC Toolkit 和 WinDbg。

如果是使用其它編譯器，你應該用相應的偵錯程式: Borland 編譯器編譯的 Vim 可執行文
件使用 TD；Cygwin 和 MinGW 編譯器使用 gdb (見上 |debug-gcc|)。


								*debug-vs2005*
3.2 用 Visual Studio 2005/Visual C++ 2005 Express 除錯 Vim 的崩潰 ~

首先啟動 vim.exe 或 gvim.exe，然後啟動 Visual Studio。(如果你沒有 Visual
Studio，按照 |get-ms-debuggers| 的指示獲取免費版本 Visual C++ 2005 Express
Edition。)

在 Tools 選單上點選 Attach to Process (連線到程序)。選擇 Vim 的程序。

在 Vim 裡，重現崩潰。Visual Studio 這時會給出對話方塊，告訴你 Vim 程序出現了未處
理的例外。點選 Break，中斷該程序並進入除錯。

Visual Studio 這時彈出另一個對話方塊，告訴你無法載入符號檔案所以不能顯示原始碼。
點選 OK。

這時會開啟若干視窗。在 Call Stack (呼叫棧) 視窗按滑鼠右鍵。然後選擇 Load
Symbols (載入符號)。Find Symbols (尋找符號) 對話方塊會開啟以尋找 (g)vim.pdb。導
航到你準備好的包含 PDB 檔案的目錄，然後選擇 Open。

此時，你應該有了完整的呼叫棧，其中包含了 vim 的函式名和行號。雙擊任何一行會給
出 Find Source (尋找原始碼) 對話方塊。導航到包含 Vim 原始碼的目錄 (如果有的話)。

如果你不知道如何繼續除錯，按照 ":help bug-reports" 的步驟進行。把呼叫棧貼上到
漏洞報告裡。

如果有 Visual Studio 的付費版本，你可以用 Debug 選單儲存一個 minidump 並在漏洞
報告裡一併傳送。minidump 是一個小檔案 (<100KB)，裡面包含程序的狀態資訊。
Visual C++ 2005 Express Edition 不能儲存 minidump 也不能安裝成為 just-in-time
(即時) 偵錯程式。如果你需要儲存 minidump 或者需要即時 (或 postmortem，事後) 除錯
器的話，使用 WinDbg，|debug-windbg|。

								*debug-windbg*
3.3 用 WinDbg 除錯 Vim 的崩潰 ~

|get-ms-debuggers| 說明如何得到 WinDbg。

和 Visual Studio IDE 一樣，你可以連線 WinDbg 到執行中的 Vim 程序。你也可以讓系
統自動啟用 WinDbg，從而使之成為事後偵錯程式。要設定 WinDbg 成為一個事後偵錯程式，
執行 "windbg -I"。

要連線 WinDbg 到執行中的 Vim 程序，啟動 WinDbg，在 File 選單上點選 Attach to
Process (連線到程序)。選擇 Vim 程序然後點選 OK。

這個時候，選擇 File 選單的 Symbol File Path (符號檔案路徑)，然後把包含 Vim PDB
檔案的目錄加入 sympath。如果你有 Vim 原始碼，使用 File 選單的 Source File Path
(原始檔路徑)。WinDbg 裡可以開啟原始檔，如果你願意，也可以設定斷點。現在重現崩
潰。WinDbg 應該會開啟原始檔並定位於崩潰所在的位置。使用 View 選單，你可以檢查
呼叫棧、區域性變數、觀察視窗 (watch window) 和其它。

如果把 WinDbg 用作事後偵錯程式，你不需要把 WinDbg 連線到 Vim 程序上。只要簡單地
重現崩潰，WinDbg 就會自動啟動。用上面相同的方法設定符號檔案路徑和原始檔路徑。

要儲存 minidump，在 WinDbg 命令列上輸入: >
        .dump vim.dmp
<
							*debug-minidump*
3.4 開啟 Minidump ~

如果你有 minidump 檔案，你可以用 Visual Studio 或 WinDbg 開啟它。

Visual Studio 2005 裡: File 選單上選擇 Open，然後 Project/Solution。導航到該
.dmp 檔案然後將它開啟。現在按 F5 開啟偵錯程式。按照 |debug-vs2005| 的指示來設定
符號檔案路徑。

WinDbg 裡: 選擇 File 選單的 Open Crash Dump，按照 |debug-windbg| 的指示來設定
符號檔案路徑。

							*get-ms-debuggers*
3.5 獲得 Microsoft 除錯工具 ~

Debugging Tools for Windows (Windows 除錯工具) 可以在這裡下載
    http://www.microsoft.com/whdc/devtools/debugging/default.mspx
它包括 WinDbg 偵錯程式。

Visual C++ 2005 Express Edition 可以在這裡免費下載:
    http://msdn.microsoft.com/vstudio/express/visualC/default.aspx

=========================================================================
 vim:tw=78:ts=8:ft=help:norl:
