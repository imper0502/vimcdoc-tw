*mlang.txt*	For Vim version 8.0.  最近更新: 2017年8月


		  VIM 參考手冊    by Bram Moolenaar
	  譯者: jwdu <junweidu@ustc.edu>，iCrazy <icrazy@ustc.edu>
			    http://vimcdoc.sf.net


多語言特性					*multilang* *multi-lang*

這裡講的是使用各種不同語言的資訊和選單。如果希望編輯多位元組文字請參看
|multibyte|。

基本的使用請參看使用者手冊 |usr_45.txt|。

1. 資訊				|multilang-messages|
2. 選單				|multilang-menus|
3. 指令碼				|multilang-scripts|

同時請參看 |help-translated| 閱讀有關多語言幫助使用。

{Vi 沒有以上的功能}
{僅當編譯時加入 |+multi_lang| 特性才有效}

==============================================================================
1. 資訊							*multilang-messages*

Vim 從環境變數中獲取當前 locale 資訊。這意味著在大部分的情形下，Vim 將使用你喜
歡的語言，除非這種語言不存在。

為了知道你的系統所支援的語言列表，可以檢視以下的路徑 (針對 Unix):
	/usr/lib/locale ~
	/usr/share/locale ~
不幸的是，大小寫是區分的。同時還要注意 "-" 和 "_" 不要用混了。

(譯者注: Windows 上，簡體/繁體中文對應語言是 chinese_china 和 chinese_taiwan，
它們在內部被翻譯為 zh_CN 和 zh_TW。換而言之，可以用 >
	:language chinese_china " 不能直接用 zh_CN
但 >
	:echo v:lang
	zh_CN
這一翻譯機制目前來自硬編碼，因而看來沒有 UTF-8 對應形式的支援。)

					    *:lan* *:lang* *:language* *E197*
:lan[guage]
:lan[guage] mes[sages]
:lan[guage] cty[pe]
:lan[guage] tim[e]
			顯示當前的語言 (即 locale)。
			使用 "messages" 引數會顯示出用作訊息的語言。術語:
			LC_MESSAGES。
			使用 "ctype" 引數，會顯示出用作字元編碼的語言。術語:
			LC_CTYPE。
			使用 "time" 引數會顯示出用作 strftime() 的語言。術語:
			LC_TIME。
			不加引數時顯示當地語言的全稱 (這個功能依賴於系統)。
			當前的語言同樣也可以通過變數 |v:lang|、|v:ctype| 和
			|v:lc_time| 來獲得。

:lan[guage] {name}
:lan[guage] mes[sages] {name}
:lan[guage] cty[pe] {name}
:lan[guage] tim[e] {name}
			把當前的語言 (即 locale) 設定成 {name}。
			此處的 {name} 必須是你係統上的一個有效的語言。一些系統
			接受像 "en" 或 "en_US" 這樣的別名，但是，一些系統只接
			受像 "en_US.ISO_8859-1" 這樣完整的名稱。Unix 系統上可
			以用以下命令檢視支援的 locale: >
				:!locale -a
<			藉助於引數 "messages"，你就可以設定訊息使用的語言。如
			果你希望的話，這兩者可以不同，例如: 當你編輯日文文字時
			使用英文訊息。它設定 $LC_MESSAGES。
			藉助於引數 "ctype"，你就可以設定用作字元編碼的語言。這
			將會影響到 Vim 所連線的庫。一般不能將它和 'encoding'
			設成不同的值，除非是 "C"。它設定 $LC_CTYPE。
			藉助於引數 "time" 引數，你就可以設定用作時間和日期訊息
			的語言。它影響到 strftime()。它設定 $LC_TIME。
			沒有引數時，以上兩者都會被設定，另外還會設定 $LANG。
			編譯時加上 |+float| 特性時，LC_NUMERIC 值總會被設為
			"C"，以便浮點數使用 '.' 作為十進位制小數點。
			這將會使那些依賴語言的專案 (資訊，時間和日期的格式) 看
			起來有一些不同。這不是所有系統都完全支援的。
			如果設定失敗，將會返回一個出錯資訊。如果設定成功，將不
			會有任何資訊。例如: >
				:language
				Current language: C
				:language de_DE.ISO_8859-1
				:language mes
				Current messages language: de_DE.ISO_8859-1
				:lang mes en
<

MS-WINDOWS 信 息 的 翻 譯				*win32-gettext*

如果你用了自安裝的 .exe 檔案，應該不需要什麼設定。否則你可能找不到
libintl.dll 檔案。可以從下面的網站得到它:

	http://sourceforge.net/projects/gettext
或:
	https://mlocati.github.io/gettext-iconv-windows/

這裡還包含了 xgettext，msgformat 以及其它工具。

libintl.dll 應該和 (g)vim.exe 放在同一個目錄內，或者放在環境變數 PATH 指定的那
些目錄裡。Vim 也會查詢 libintl-8.dll。訊息資料檔案 (vim.mo) 應放在
"$VIMRUNTIME/lang/xx/LC_MESSAGES"，在這裡 "xx" 是語言的縮寫 (多數是兩個字母)。

如果你製作了自己的翻譯，那麼，你需要生成 .po 檔案並把它轉化為 .mo 檔案。同時，
找到 Vim 的原始碼並閱讀 "src/po/README.txt" 檔案。

如果你不想使用自動選擇的語言，那麼就把 $LANG 變數設為你希望的語言。如果你不希
望使用語言翻譯，請設定成 "en"。 >

  :let $LANG = 'ja'

(Windows 的文字由 Muraoka Taro 完成)

==============================================================================
2. 選單						*multilang-menus*

基本的使用請參看 |45.2|，尤其是 'langmenu' 的使用部分。

注意 如果在翻譯後對選單作了更改，選單的一些選項可能會顯示成英文。請聯絡翻譯的
維護者並請求他更新選單的翻譯。你可以在 "$VIMRUNTIME/lang/menu_<lang>.vim" 中找
到翻譯者的名字和 e-mail 地址。

為選單設定字型 (或字型集)，請用 |:highlight| 命令。例如: >

	:highlight Menu font=k12,r12


LOCALE 的 別 名

不幸的是，即使使用相同的語言和編碼，不同系統上的當地語言名稱也可能是不同的。如
果你沒有得到你需要的選單翻譯，請檢查下面命令的輸出: >

	echo v:lang

現在，檢查 "$VIMRUNTIME/lang" 目錄中有沒有使用相似語言的翻譯檔案。注意 符號
"-" 和 "_" 的區別，它可能是找不到檔案的罪魁禍首！另外一個通常要注意的差別是
"iso8859-1" 和 "iso_8859-1"。所幸的是，Vim 把所有的名字都轉換成小寫了。因此，
你沒有必要擔心大小寫的差別。為了避免空格被忘掉，它們被轉化成下劃線。

如果你發現了一個不同檔名的選單翻譯，你可以在自己的 runtime 目錄下建立一個文
件並裝載之。這個檔案的名字可以是: >

	~/.vim/lang/menu_<v:lang>.vim

檢查 'runtimepath' 選項以確定會搜尋哪些目錄。在此檔案中寫一個命令來裝載那個使
用不同名字的選單檔案: >

	runtime lang/menu_<other_lang>.vim


翻 譯 菜 單

如果你想自己翻譯選單，你可以使用 |:menutrans| 命令，下面有一些說明。推薦把每種
語言的翻譯放到單獨的 Vim 指令碼檔案中。如果一種語言還沒有被翻譯，你可以成為它的
維護者，並把你的翻譯貢獻出來，以便能讓其它 Vim 使用者使用。如果你要這樣的意願的
話，請發 e-mail 給 Vim 的維護者: <maintainer@vim.org>。

					*:menut* *:menutrans* *:menutranslate*
:menut[ranslate] clear
			清除所有的選單翻譯。

:menut[ranslate] {english} {mylang}
			將選單名稱 {english} 翻譯成 {mylang}。像 "&" 和
			"<Tab>" 這樣的特殊字元也必須包括進去。如同其它 |:menu|
			命令中的那樣，空格和句點需要用反斜槓來轉義。
			忽略 {english} 中的大小寫。

你可以在 $VIMRUNTIME/lang 目錄中找到例子。

為了檢驗你的翻譯，首先你需要清除所有的選單。用下面的方法你可以不重新啟動 Vim
就達到這樣的效果: >
	:source $VIMRUNTIME/delmenu.vim
	:source <your-new-menu-file>
	:source $VIMRUNTIME/menu.vim

選單路徑的每一個部分是被獨立的翻譯的。這就意味著: 如果 "Help" 被翻譯成
"幫助"， "Overview" 被翻譯成 "總覽"，那麼 "Help.Overview" 就會被翻譯成
"幫助.總覽"。

==============================================================================
3. 指令碼							*multilang-scripts*

在 Vim 指令碼中，你可以用 |v:lang| 變數獲得當前的 locale。預設值是 "C" 或者來自
於環境變數 $LANG。

以下這個例子展示了這個變數的一個簡單的應用，它可以顯示出針對使用者喜好語言的信
息: >

	:if v:lang =~ "zh_CN"
	:  echo "早上好"
	:else
	:  echo "Good morning"
	:endif
<

 vim:tw=78:sw=4:ts=8:ft=help:norl:
